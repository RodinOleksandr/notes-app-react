{"version":3,"sources":["dispatcher/AppDispatcher.js","constants/AppConstants.js","stores/NotesStore.js","api/index.js","actions/NotesActions.js","components/ColorPicker.jsx","components/NoteEditor.jsx","components/Note.jsx","components/NoteGrid.jsx","components/App.jsx","index.js"],"names":["AppDispatcher","Dispatcher","keyMirror","LOAD_NOTES_REQUEST","LOAD_NOTES_SUCCESS","LOAD_NOTES_FAIL","_notes","_isLoading","formatNote","note","id","_id","title","text","color","createdAt","TasksStore","Object","assign","EventEmitter","prototype","isLoading","getNotes","emitChange","this","emit","addChangeListener","callback","on","removeChangeListener","removeListener","register","action","type","AppConstants","notes","map","error","console","log","api","axios","get","concat","apiPrefix","data","post","noteId","delete","NoteActions","loadNotes","dispatch","Constants","then","_ref","catch","err","createNote","_this","deleteNote","_this2","COLORS","ColorPicker","props","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","react_default","a","createElement","className","key","cx","selected","value","style","backgroundColor","onClick","onChange","bind","Component","NoteEditor","state","handleTitleChange","assertThisInitialized","handleTextChange","handleNoteAdd","handleColorChange","setState","event","target","newNote","onNoteAdd","placeholder","rows","src_components_ColorPicker","disabled","Note","onDelete","children","NoteGrid","lib_default","options","itemSelector","columnWidth","gutter","isFitWidth","src_components_Note","onNoteDelete","getStateFromFlux","NotesStore","App","_onChange","NotesActions","src_components_NoteEditor","components_NoteGrid","handleNoteDelete","ReactDOM","render","src_components_App","document","getElementById"],"mappings":"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","file":"static/js/main.743bc3fe.chunk.js","sourcesContent":["import { Dispatcher } from 'flux';\n\nexport default new Dispatcher();","import keyMirror from 'keymirror';\n\nexport default keyMirror({\n    LOAD_NOTES_REQUEST: null,\n    LOAD_NOTES_SUCCESS: null,\n    LOAD_NOTES_FAIL: null\n});\n","import { EventEmitter } from 'events';\n\nimport AppDispatcher from '../dispatcher/AppDispatcher';\nimport AppConstants from '../constants/AppConstants';\n\nconst CHANGE_EVENT = 'change';\n\nlet _notes = [];\nlet _loadingError = null;\nlet _isLoading = true;\n\nfunction formatNote(note) {\n    return {\n        id: note._id,\n        title: note.title,\n        text: note.text,\n        color: note.color || '#ffffff',\n        createdAt: note.createdAt\n    };\n}\n\nconst TasksStore = Object.assign({}, EventEmitter.prototype, {\n    isLoading() {\n        return _isLoading;\n    },\n\n    getNotes() {\n        return _notes;\n    },\n\n    emitChange: function() {\n        this.emit(CHANGE_EVENT);\n    },\n\n    addChangeListener: function(callback) {\n        this.on(CHANGE_EVENT, callback);\n    },\n\n    removeChangeListener: function(callback) {\n        this.removeListener(CHANGE_EVENT, callback);\n    }\n});\n\nAppDispatcher.register(function(action) {\n    switch(action.type) {\n        case AppConstants.LOAD_NOTES_REQUEST: {\n            _isLoading = true;\n\n            TasksStore.emitChange();\n            break;\n        }\n\n        case AppConstants.LOAD_NOTES_SUCCESS: {\n            _isLoading = false;\n            _notes = action.notes.map( formatNote );\n            _loadingError = null;\n\n            TasksStore.emitChange();\n            break;\n        }\n\n        case AppConstants.LOAD_NOTES_FAIL: {\n            _loadingError = action.error;\n\n            TasksStore.emitChange();\n            break;\n        }\n\n        default: {\n            console.log('No such handler');\n        }\n    }\n});\n\nexport default TasksStore;\n","import axios from 'axios';\n\nimport { apiPrefix } from '../etc/config.json';\n\nexport default {\n    listNotes() {\n        return axios.get(`${apiPrefix}/notes`);\n    },\n\n    createNote(data) {\n        return axios.post(`${apiPrefix}/notes`, data);\n    },\n\n    deleteNote(noteId) {\n        return axios.delete(`${apiPrefix}/notes/${noteId}`);\n    }\n}\n","import AppDispatcher from '../dispatcher/AppDispatcher';\nimport Constants from '../constants/AppConstants';\n\nimport api from '../api';\n\nconst NoteActions = {\n    loadNotes() {\n        AppDispatcher.dispatch({\n            type: Constants.LOAD_NOTES_REQUEST\n        });\n\n        api.listNotes()\n        .then(({ data }) =>\n            AppDispatcher.dispatch({\n                type: Constants.LOAD_NOTES_SUCCESS,\n                notes: data\n            })\n        )\n        .catch(err =>\n            AppDispatcher.dispatch({\n                type: Constants.LOAD_NOTES_FAIL,\n                error: err\n            })\n        );\n    },\n\n    createNote(note) {\n        api.createNote(note)\n        .then(() =>\n            this.loadNotes()\n        )\n        .catch(err =>\n            console.error(err)\n        );\n    },\n\n    deleteNote(noteId) {\n        api.deleteNote(noteId)\n        .then(() =>\n            this.loadNotes()\n        )\n        .catch(err =>\n            console.error(err)\n        );\n    }\n};\n\nexport default NoteActions;\n","import React, {Component} from 'react';\nimport cx from 'classnames';\n\nimport './ColorPicker.scss';\n\nconst COLORS = ['#FFFFFF', '#80D8FF', '#FFFF8D', '#FF8A80', '#CCFF90', '#CFD8DC', '#FFD180'];\n\nclass ColorPicker extends Component{\n  constructor(props){\n    super(props);\n\n  }\n    render() {\n\n        return (\n            <div className='ColorPicker'>\n                {\n                    COLORS.map(color =>\n                        <div\n                            key={color}\n                            className={cx('ColorPicker__swatch', { selected: this.props.value === color })}\n                            style={{ backgroundColor: color }}\n                            onClick={this.props.onChange.bind(null, color)}\n                        />\n                    )\n                }\n            </div>\n        );\n    }\n}\n\nexport default ColorPicker;\n","import React, { Component } from 'react';\r\nimport './NoteEditor.scss';\r\nimport './ColorPicker.scss';\r\nimport ColorPicker from './ColorPicker.jsx';\r\n\r\nclass NoteEditor extends Component{\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state = {\r\n      title: '',\r\n      text: '',\r\n      color: '#FFFFFF'\r\n    }\r\n\r\n    this.handleTitleChange = this.handleTitleChange.bind(this);\r\n    this.handleTextChange = this.handleTextChange.bind(this);\r\n    this.handleNoteAdd = this.handleNoteAdd.bind(this);\r\n    this.handleColorChange = this.handleColorChange.bind(this);\r\n  }\r\n  handleColorChange(color) {\r\n         this.setState({ color});\r\n     }\r\n\r\n  handleTitleChange(event) {\r\n      this.setState({ title: event.target.value });\r\n  }\r\n\r\n  handleTextChange(event) {\r\n      this.setState({ text: event.target.value });\r\n  }\r\n\r\n\r\n\r\n  handleNoteAdd() {\r\n      const newNote = {\r\n          title: this.state.title,\r\n          text: this.state.text,\r\n          color: this.state.color\r\n      };\r\n\r\n      this.props.onNoteAdd(newNote);\r\n      this.setState({ text: '', title: '', color: '#FFFFFF' });\r\n  }\r\n\r\n\r\n  render(){\r\n    return (\r\n      <div className='NoteEditor'>\r\n          <input\r\n              type='text'\r\n              className='NoteEditor__title'\r\n              placeholder='Enter title'\r\n              value={this.state.title}\r\n              onChange={this.handleTitleChange}\r\n          />\r\n          <textarea\r\n              placeholder='Enter note text'\r\n              rows={5}\r\n              className='NoteEditor__text'\r\n              value={this.state.text}\r\n              onChange={this.handleTextChange}\r\n          />\r\n          <div className='NoteEditor__footer'>\r\n              <ColorPicker\r\n                  value={this.state.color}\r\n                  onChange={this.handleColorChange}\r\n              />\r\n              <button\r\n                  className='NoteEditor__button'\r\n                  disabled={!this.state.text}\r\n                  onClick={this.handleNoteAdd}\r\n              >\r\n                  Add\r\n              </button>\r\n          </div>\r\n      </div>\r\n  );\r\n  };\r\n}\r\nexport default NoteEditor\r\n","import React, { Component } from 'react';\r\nimport NoteEditor from './NoteEditor.jsx';\r\nimport './Note.scss';\r\n\r\nclass Note extends Component{\r\nconstructor(props){\r\n  super(props);\r\n}\r\n  render() {\r\n      const style = { backgroundColor: this.props.color };\r\n\r\n      return (\r\n          <div className='Note' style={style}>\r\n              <span className='Note__del-icon' onClick={this.props.onDelete}> × </span>\r\n              {\r\n                  this.props.title\r\n                  ?\r\n                      <h4 className='Note__title'>{this.props.title}</h4>\r\n                  :\r\n                      null\r\n              }\r\n              <div className='Note__text'>{this.props.children}</div>\r\n          </div>\r\n      );\r\n  }\r\n}\r\nexport default Note\r\n","import React, { Component } from 'react';\r\nimport Note from './Note.jsx';\r\nimport  './NotesGrid.scss';\r\nimport Masonry from 'react-masonry-component';\r\n\r\nclass NoteGrid extends Component{\r\n  constructor(props){\r\n    super(props);\r\n  }\r\n  render(){\r\n    const masonryOptions = {\r\n        itemSelector: '.Note',\r\n        columnWidth: 90,\r\n        gutter: 10,\r\n        isFitWidth: true\r\n    };\r\n    return (\r\n      <Masonry\r\n          className='NotesGrid'\r\n          options={masonryOptions}\r\n      >\r\n          {\r\n              this.props.notes.map(note =>\r\n                  <Note\r\n                      key={note.id}\r\n                      title={note.title}\r\n                      onDelete={this.props.onNoteDelete.bind(null, note)}\r\n                      color={note.color}\r\n                  >\r\n                      {note.text}\r\n                  </Note>\r\n              )\r\n          }\r\n      </Masonry>\r\n    )\r\n  };\r\n}\r\nexport default NoteGrid\r\n","import React, { Component } from 'react';\r\nimport NotesStore from '../stores/NotesStore';\r\nimport NotesActions from '../actions/NotesActions';\r\nimport NoteEditor from './NoteEditor.jsx';\r\nimport NoteGrid from './NoteGrid.jsx';\r\nimport './App.scss';\r\n\r\nfunction getStateFromFlux() {\r\n  return {\r\n    isLoading: NotesStore.isLoading(),\r\n    notes: NotesStore.getNotes()\r\n  };\r\n}\r\n\r\nclass App extends Component{\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state = getStateFromFlux()\r\n    \r\n  }\r\n  componentWillMount() {\r\n    NotesActions.loadNotes();\r\n  }\r\n  componentDidMount() {\r\n    NotesStore.addChangeListener(this._onChange);\r\n  }\r\n  componentWillUnmount(){\r\n    NotesStore.removeChangeListener(this._onChange);\r\n  }\r\n  handleNoteAdd(data) {\r\n    NotesActions.createNote(data);\r\n  }\r\n  handleNoteDelete(note) {\r\n    NotesActions.deleteNote(note.id);\r\n  }\r\n  render(){\r\n    return (\r\n      <div className = 'App'>\r\n        <h2 className = 'App__header'>NotesApp</h2>\r\n        <NoteEditor onNoteAdd = {this.handleNoteAdd} />\r\n        <NoteGrid notes = {this.state.notes} onNoteDelete = {this.handleNoteDelete}/>\r\n      </div>\r\n    )\r\n  }\r\n  _onChange = () => {\r\n    this.setState(getStateFromFlux());\r\n  }\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App.jsx';\n\nReactDOM.render(\n    <App/>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}